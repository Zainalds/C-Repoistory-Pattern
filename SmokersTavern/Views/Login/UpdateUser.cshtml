<!--Shreshtha-->
@model SmokersTavern.Model.UserUpdateViewModel

@{
    ViewBag.Title = "UpdateUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyBZnpoyI3c5lcX-lcOaj3A0RdF83YLF1mg"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('Address'));
        getLatLong(places);

    });

    function placeLastOfFocus() {
        // alert(1);


        // alert(places);
        //document.getElementById('Address').value
        //!a.trim()
        if (!document.getElementById('Address').value.trim()) {

            $("#Address1").val('');
            $("#latitude").val('');
            $("#longitude").val('');
            return;
        }
        //doGeocode();
        var places = new google.maps.places.Autocomplete(document.getElementById('Address'));
        getLatLong(places);
    }
    function doGeocode() {
        var addr = document.getElementById("Address");
        // Get geocoder instance
        var geocoder = new google.maps.Geocoder();

        // Geocode the address
        geocoder.geocode({ 'address': addr.value }, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK && results.length > 0) {

                // set it ot he correct, formatted address if it's vadlid
                addr.value = results[0].formatted_address;;
                alert("valid");
                // show an error if it's not
            } else alert("Invalid address");
        });
    };
    function getLatLong(places) {
        google.maps.event.addListener(places, 'place_changed', function () {
            $("#Address").val('');
            $("#latitude").val('');
            $("#longitude").val('');
            //alert(1);
            var place = places.getPlace();
            var address = place.formatted_address;
            var latitude = place.geometry.location.lat();
            var longitude = place.geometry.location.lng();
            //var city = place.geometry.location.city();
            //alert(address);
            //for testing purpose alert
            var mesg = "Address: " + address;
            mesg += "\nLatitude: " + latitude;
            mesg += "\nLongitude: " + longitude;
            //alert(mesg);
            $("#Address1").val(address);
            //$("#latitude").val(latitude);
            //$("#longitude").val(longitude);
            $("#Address").val(address);
        });
    }
</script>

<script src="/Scripts/jquery-1.10.2.js"></script>

<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.bootstrap.js"></script>

<div class="brand">Smokers Tavern</div>
<div class="row">
    <div class="box">
        <div class="col-lg-12">
            <hr>
            <h2 class="intro-text text-center">
                Update Your Account Details Here
            </h2>
            <hr />



            @using (Html.BeginForm("UpdateUser", "Login", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <span style="color:red;font-weight:bold">
                    @TempData["UpdateUser_Failure"]
                </span>
                <span style="color:Green;font-weight:bold">
                    @TempData["UpdateUser_Success"]
                </span>

                @Html.ValidationSummary("", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(m => m.FirstMidName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10" style="height: 60%;width: 30%">
                        @Html.EditorFor(m => m.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.FirstMidName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Surname, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10" style="height: 60%;width: 30%">
                        @Html.EditorFor(m => m.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10" style="height: 60%;width: 30%">
                        @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control", id = "Address", autocomplete = "on" } })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.CellNo, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => m.CellNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.CellNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" style="width: 20%;height: 10%" class="btn btn-success btn-block btn-lg" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

