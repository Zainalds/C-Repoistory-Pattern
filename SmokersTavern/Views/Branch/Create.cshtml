<!--Shreshtha-->
@model SmokersTavern.Model.BranchViewModel


@{
    ViewBag.Title = "New Branch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/vendor/bootstrap/css/bootstrap.min.css")
@Styles.Render("~/Content/vendor/font-awesome/css/font-awesome.min.css")
@Styles.Render("~/Content/css/sb-admin.css")

@Scripts.Render("~/Content/vendor/jquery/jquery.min.js")
@Scripts.Render("~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js")
@Scripts.Render("~/Content/js/sb-admin.min.js")
@Scripts.Render("~/Content/vendor/jquery-easing/jquery.easing.min.js")

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyBZnpoyI3c5lcX-lcOaj3A0RdF83YLF1mg"></script>
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('Address'));
        getLatLong(places);

    });

    function placeLastOfFocus() {
        // alert(1);


        // alert(places);
        //document.getElementById('Address').value
        //!a.trim()
        if (!document.getElementById('Address').value.trim()) {

            $("#Address1").val('');
            $("#latitude").val('');
            $("#longitude").val('');
            return;
        }
        //doGeocode();
        var places = new google.maps.places.Autocomplete(document.getElementById('Address'));
        getLatLong(places);
    }
    function doGeocode() {
        var addr = document.getElementById("Address");
        // Get geocoder instance
        var geocoder = new google.maps.Geocoder();

        // Geocode the address
        geocoder.geocode({ 'address': addr.value }, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK && results.length > 0) {

                // set it ot he correct, formatted address if it's vadlid
                addr.value = results[0].formatted_address;;
                alert("valid");
                // show an error if it's not
            } else alert("Invalid address");
        });
    };
    function getLatLong(places) {
        google.maps.event.addListener(places, 'place_changed', function () {
            $("#Address").val('');
            $("#latitude").val('');
            $("#longitude").val('');
            //alert(1);
            var place = places.getPlace();
            var address = place.formatted_address;
            var latitude = place.geometry.location.lat();
            var longitude = place.geometry.location.lng();
            //var city = place.geometry.location.city();
            //alert(address);
            //for testing purpose alert
            var mesg = "Address: " + address;
            mesg += "\nLatitude: " + latitude;
            mesg += "\nLongitude: " + longitude;
            //alert(mesg);
            $("#Address1").val(address);
            //$("#latitude").val(latitude);
            //$("#longitude").val(longitude);
            $("#Address").val(address);
        });
    }
</script>

<center><h2 class="alert-success" style="font-family:'Comic Sans MS';">Add New Branch</h2></center>


@using (Html.BeginForm("Create", "Branch", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.BranchName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10" style="height: 40%;width: 30%">
            @Html.TextBoxFor(m => m.BranchName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BranchName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BranchManager, new { @class = "col-md-2 control-label" })
        <div class="col-md-10" style="height: 40%;width: 30%">
            @Html.TextBoxFor(m => m.BranchManager, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BranchManager, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BranchAddress, new { @class = "col-md-2 control-label" })
        <div class="col-md-10" style="height: 40%;width: 30%">
            @Html.TextBoxFor(m => m.BranchAddress, new { @class = "form-control", id = "Address", autocomplete = "on" })
            @Html.ValidationMessageFor(m => m.BranchAddress, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BranchContactNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10" style="height: 40%;width: 30%">
            @Html.TextBoxFor(m => m.BranchContactNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BranchContactNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.BranchEmail, new { @class = "col-md-2 control-label" })
        <div class="col-md-10" style="height: 40%;width: 30%">
            @Html.TextBoxFor(m => m.BranchEmail, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.BranchEmail, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="modal-footer">
        <input type="submit" value="Submit" class="btn btn-success " />
        <input type="reset" value="Reset" class="btn btn-info" />
    </div>
}


